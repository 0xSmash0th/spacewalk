#!/bin/sh
#
# Copyright (c) 2008 Red Hat, Inc.
#
# This software is licensed to you under the GNU General Public License,
# version 2 (GPLv2). There is NO WARRANTY for this software, express or
# implied, including the implied warranties of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2
# along with this software; if not, see
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.
#
# Red Hat trademarks are not licensed under GPLv2. No permission is
# granted to use or replicate Red Hat trademarks that are incorporated
# in this software or its documentation.
#
#
# $Id$

# /etc/rc.d/init.d/rhn-satellite
#   chkconfig: - 74 26
#   description: start and stop the RHN Satellite Service

SERVICES="jabberd rhn-database osa-dispatcher taskomatic tomcat5 satellite-httpd Monitoring MonitoringScout rhn-search, cobblerd"

. /etc/init.d/functions

forward_services() {
    ACTION="$1"

    RET=0
    E_STAT=0
    for service in $SERVICES; do
	if [ -e /etc/init.d/$service ]; then
	    /sbin/service $service $ACTION
            E_STAT=$?
	fi
        if [ $E_STAT -ne 0 ]; then
            RET=$E_STAT
	fi
    done
    return $RET
}

reverse_services() {
    ACTION="$1"

    RET=0
    E_STAT=0
    for service in $(echo $SERVICES | tac -s" "); do
	if [ -e /etc/init.d/$service ]; then
	    /sbin/service $service $ACTION
            E_STAT=$?
	fi
        if [ $E_STAT -ne 0 ]; then
            RET=$E_STAT
	fi
    done
    return $RET
}

start() {
        echo "Starting rhn-satellite..."
	forward_services start
	echo "Done."

        touch /var/lock/subsys/rhn-satellite
        return 0
}

stop() {
        echo "Shutting down rhn-satellite..."
	reverse_services stop
	echo "Done."

        rm -f /var/lock/subsys/rhn-satellite
        return 0
}

status() {
    forward_services status
    return $?
}

ensure_httpd_down() {
    COUNT=0
    LIMIT=10
                                                                                
    while [ "$(pidof httpd | wc -w)" -gt 0 ] && [ "$COUNT" -lt "$LIMIT" ]
    do
	sleep 1
	((COUNT++))
    done
                                                                                
    if [ "$COUNT" -eq "$LIMIT" ]; then
	killall -9 httpd
	sleep 4
    fi

    return 0
}

case "$1" in
    start)
	start
        ;;
    stop)
	stop
        ;;
    status)
	status
        ;;
    restart|reload)
        stop
        sleep 4

        ensure_httpd_down

        start       
        ;;
    *)
        echo "Usage: rhn-satellite {start|stop|status|reload|restart}"
        exit 1
        ;;
esac
exit $?
