From 3006137390d5eb48f0b18e0eb4615efdbf2e68e2 Mon Sep 17 00:00:00 2001
From: Steve Milner <steve@tachikoman.(none)>
Date: Sun, 10 Aug 2008 17:05:00 -0400
Subject: [PATCH] moved common/rhnFlags.py closer to pep8

---
 backend/common/rhnFlags.py |   36 ++++++++++++++++++++++++++----------
 1 files changed, 26 insertions(+), 10 deletions(-)

diff --git a/backend/common/rhnFlags.py b/backend/common/rhnFlags.py
index 9df0e05..d86402f 100644
--- a/backend/common/rhnFlags.py
+++ b/backend/common/rhnFlags.py
@@ -1,6 +1,5 @@
 #!/usr/bin/python
 #
-#
 # Copyright (c) 2008 Red Hat, Inc.
 #
 # This software is licensed to you under the GNU General Public License,
@@ -9,31 +8,39 @@
 # FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2
 # along with this software; if not, see
 # http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.
-# 
+#
 # Red Hat trademarks are not licensed under GPLv2. No permission is
 # granted to use or replicate Red Hat trademarks that are incorporated
-# in this software or its documentation. 
+# in this software or its documentation.
 #
 # Small class that handles a global flags structure. the globale dictionary
 # used to hold the flags gets initialized on demand
 #
 
+
 import string
 
-# set value
+
 def set(name, value = 1):
+    """
+    set value
+    """
+
     global __F
     if not name:
         return None
-    name = string.lower(name)   
+    name = string.lower(name)
     try:
         __F[name] = value
     except NameError:
-        __F = { name : value }
+        __F = {name: value}
     return None
 
-# get value
+
 def get(name):
+    """
+    get value
+    """
     global __F
     if not name:
         return None
@@ -44,8 +51,11 @@ def get(name):
         __F = {}
     return None
 
-# test value
+
 def test(name):
+    """
+    test value
+    """
     global __F
     if not name:
         return 0
@@ -56,8 +66,11 @@ def test(name):
         __F = {}
     return 0
 
-# reset all
+
 def reset():
+    """
+    reset all
+    """
     global __F
     try:
         __F.clear()
@@ -65,8 +78,11 @@ def reset():
         __F = {}
     return
 
-# return all flags in a dict
+
 def all():
+    """
+    return all flags in a dict
+    """
     global __F
     try:
         return __F
-- 
1.5.5.1

