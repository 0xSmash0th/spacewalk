#!/usr/bin/python

import argparse
import sys
import os

from spacewalk.common.rhnConfig import CFG, initCFG
from spacewalk.cdn_tools.cdnsync import CdnSync
from spacewalk.common.usix import raise_with_tb
from rhn import rhnLockfile


def system_exit(code, msgs=None):
    """Exit with a code and optional message(s). Saved a few lines of code."""

    if msgs:
        if type(msgs) not in [type([]), type(())]:
            msgs = (msgs, )
        for msg in msgs:
            sys.stderr.write(str(msg) + '\n')
    sys.exit(code)


def process_commandline():
    """process the commandline, setting the CFG object"""

    parser = argparse.ArgumentParser()
    parser.add_argument("-l", "--list-channels", action="store_true", help="List channels available to sync.")
    parser.add_argument("-c", "--channel", action="append", help="Sync this channel only.")
    parser.add_argument("--no-packages", action="store_true", help="Do not sync packages.")
    parser.add_argument("--no-errata", action="store_true", help="Do not sync errata.")
    parser.add_argument("--clear-cache", action="store_true", help="Delete partially synced channels.")
    parser.add_argument('--http-proxy', action='store', help="alternative http proxy (hostname:port)")
    parser.add_argument('--http-proxy-username', action='store', help="alternative http proxy username")
    parser.add_argument('--http-proxy-password', action='store', help="alternative http proxy password")

    cmd_args = parser.parse_args()

    initCFG('server.satellite')

    if cmd_args.http_proxy:
        CFG.set("HTTP_PROXY", cmd_args.http_proxy)
        CFG.set("HTTP_PROXY_USERNAME", cmd_args.http_proxy_username)
        CFG.set("HTTP_PROXY_PASSWORD", cmd_args.http_proxy_password)

    return cmd_args


if __name__ == '__main__':
    LOCK = None
    try:
        # quick check to see if you are a super-user.
        if os.getuid() != 0:
            sys.stderr.write("ERROR: must be root to execute\n")
            sys.exit(8)

        # acquire lock/check for other instances of cdn-sync
        #   i.e., lock against multiple instances of cdn-sync
        LOCK = rhnLockfile.Lockfile('/var/run/cdn-sync.pid')

        args = process_commandline()
        cdnsync = CdnSync()

        if args.list_channels:
            cdnsync.print_channel_tree()
        elif args.clear_cache:
            cdnsync.clear_cache()
        elif args.channel:
            cdnsync.sync(channels=args.channel, no_packages=args.no_packages, no_errata=args.no_errata)
        else:
            cdnsync.sync()

    except KeyboardInterrupt:
        system_exit(0, "\nUser interrupted process.")
    except SystemExit:
        e = sys.exc_info()[1]
        if LOCK:
            LOCK.release()
        sys.exit(e.code)
    except rhnLockfile.LockfileLockedException:
        system_exit(1, "SYNC ERROR: attempting to run more than one instance of satellite-sync. Exiting.")
    except Exception:
        e = sys.exc_info()[1]
        if LOCK:
            LOCK.release()
        raise_with_tb(Exception("SYNC ERROR: attempting to display as much information as possible\n %s" % str(e)),
                      sys.exc_info()[2])
else:
    raise ImportError("module cannot be imported")
