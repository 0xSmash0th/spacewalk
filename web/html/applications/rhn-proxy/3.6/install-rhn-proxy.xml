<?xml version="1.0"?>

<application acl-mixins="RHN::Access::System">

  <name>Spacewalk Proxy</name>
  <label>rhn_proxy</label>
  <version>3.6</version>

  <prerequisites>
    <org-channel-family>rhn-proxy</org-channel-family>
    <system-feature>ftr_proxy_capable</system-feature>
    <package-available>rhns-proxy-management</package-available>
  </prerequisites>

  <terms-and-conditions url="http://www.redhat.com/licenses" />

  <install>

    <requirements>
      <system-entitlement-possible>provisioning_entitled</system-entitlement-possible>
      <package-available>rhns-proxy-management</package-available>
      <client-capable>script.run</client-capable>
      <client-capable>configfiles.deploy</client-capable>
    </requirements>

    <collect-data description="Enable Monitoring Proxy"
     acl="org_entitlement(rhn_monitor); package_available(rhns-proxy-monitoring); global_config(satellite); global_config(is_monitoring_backend)">

      <header>
Would you like to enable Monitoring Proxy functionality on this system?
      </header>

      <rhn-form name="Enable Monitoring" label="enable_monitoring">
        <widget type="checkbox" name="Enable Monitoring?" label="enable_monitoring" default="1"/>
      </rhn-form>
    </collect-data>

    <collect-data description="Configure ${app.name} Server">

      <header>
<p>
 Configure your ${app.name} Server below.  The Administrator Email
 Address is the address to which system status messages are sent.  For
 the ${app.name} Server to function properly, the ${app.name} Hostname
 must be set to the system's fully qualified domain name.
</p>

<p>
 The Spacewalk Parent Server is the hostname of the server this Proxy
 connects to.  Depending on your configuration, it could be the
 central Spacewalk Servers, your organization's Spacewalk Server, or
 another ${app.name} Server.  If this ${app.name} will be connecting
 through an HTTP proxy, populate the related fields.
</p>

<p>
 If you choose to enable Secure Sockets Layer (SSL), this Spacewalk Proxy
 will use SSL to connect to the Spacewalk Parent Server.  Regardless of
 whether you enable SSL for the connection to the Spacewalk Parent Server,
 you will be prompted to generate an SSL certificate on the next page.
 This SSL certificate will allow client systems to connect to this
 ${app.name} securely.  Refer to the RHN Proxy Installation Guide for
 more information.
</p>
<p>
 When using an HTTP Proxy Server, use the format "servername:port" to specify the server.  For example: "proxy-server.corp.com:8888".
</p>
      </header>

      <rhn-form name="Configure Proxy" label="configure_proxy">
        <widget type="literal" label="Product" default="${app.name}" />
        <widget type="literal" label="Version" default="${app.version}" />
        <widget type="text" name="Administrator Email Address" label="traceback_mail" size="40" default="${user.email}">
          <require valid-email="1" />
        </widget>
        <widget type="text" name="${app.name} Hostname" label="hostname" size="40" default="${system.guess_hostname}">
          <require response="1"/>
	  <require fqdn="1"/>
          <filter type="text" />
        </widget>
        <widget type="text" name="Spacewalk Parent Server" label="rhn_parent" size="40" default="${system.guess_rhn_parent}">
          <require response="1"/>
	  <require fqdn="1"/>
          <filter type="text" />
	</widget>
        <widget type="text" name="HTTP Proxy Server" label="http_proxy" size="30">
          <filter type="text" />
	  <require fqdn-and-port="1"/>
        </widget>
        <widget type="text" name="HTTP Proxy Username" label="http_proxy_username" size="10">
          <filter type="text" />
        </widget>
        <widget type="text" name="HTTP Proxy Password" label="http_proxy_password" size="10">
          <filter type="text" />
        </widget>
        <widget type="checkbox" name="Enable SSL?" label="enable_ssl" default="1" checked="1"
                acl="global_config(ssl_available) or not global_config(satellite)"/>
        <widget type="literal" label="SSL" default="SSL is not enabled on this Spacewalk."
		acl="global_config(satellite); not global_config(ssl_available)"/>
        <widget type="checkbox" name="Enable Push?" label="enable_osad" default="1" checked="1"
                acl="global_config(satellite); global_config(ssl_available)"/>
      </rhn-form>

    </collect-data>

    <collect-data description="Configure SSL" acl="global_config(ssl_available); global_config(satellite)">
      <header>
        Enter your CA cert password and other SSL configuration
        information here.  This information will be used to generate
        the server certificate used by the proxy server to communicate
        via SSL.
      </header>

      <rhn-form name="Configure SSL" label="configure_ssl">
        <widget type="literal" label="Product" default="${app.name}" />
        <widget type="literal" label="Version" default="${app.version}" />

        <widget type="password" name="CA Cert Password" label="ca_cert_password" size="15">
          <require max-length="128"/>
          <require response="1"/>
	</widget>

        <widget type="text" name="Organization" label="org" size="24">
          <require max-length="128"/>
          <require response="1"/>
	</widget>

        <widget type="text" name="Organizational Unit" label="org-unit" size="24">
          <require max-length="128"/>
	</widget>

        <widget type="text" name="Email Address" label="email" size="40" default="${session.traceback_mail}">
          <require max-length="128"/>
          <require response="1"/>
	</widget>

        <widget type="text" name="City" label="city" size="16">
          <require max-length="128"/>
          <require response="1"/>
        </widget>

        <widget type="text" name="State" label="state" size="16">
          <require max-length="128"/>
          <require response="1"/>
	</widget>

        <widget type="select" name="Country" label="country" size="1" default="US" populate_options="RHN::SatInstall->valid_cert_countries">
          <require response="1"/>
        </widget>

        <widget type="text" name="Server cert Expiration (years)" label="cert-expiration" size="3" default="5">
          <require max-length="3"/>
          <require response="1"/>
	</widget>

        <widget type="hidden" label="use_ssl" default="1" />
      </rhn-form>
    </collect-data>

    <collect-data description="Skip SSL Configuration"
		  acl="not global_config(ssl_available); global_config(satellite)">
      <header>
        You do not have SSL enabled for your Spacewalk Server.
        Therefore, SSL will not be available for this Spacewalk Proxy.  SSL
        is a critical part of the security model of Spacewalk.  If you wish
        to configure SSL at a later time, see the Spacewalk
        Installation Guide.
      </header>

      <rhn-form name="Configure SSL" label="configure_ssl">
        <widget type="literal" label="Product" default="${app.name}" />
        <widget type="literal" label="Version" default="${app.version}" />
        <widget type="hidden" label="ca_chain" default="/usr/share/rhn/RHNS-CA-CERT" />
      </rhn-form>
    </collect-data>

    <collect-data description="Configure SSL" acl="not global_config(satellite)">
      <header>
        In order to configure SSL on your ${app.name}, you will need
        to generate a CA certificate and an SSL key pair.  See the <a
        href="/help/proxy/s1-quickstart-install-config.html">RHN Proxy
        Installation Guide </a> for more details.  After you have
        generated the SSL key, you will need to upload the resulting
        tar file containing the certificate files using the form
        below.  If the SSL CA certificate included in the tar file does
        not already exist in your org's <a
        href="/network/keys/key_list.pxt" target="_new">list of SSL
        keys</a>, it will be added to that list.
      </header>

      <rhn-form name="Configure SSL" label="configure_ssl">
        <widget type="literal" label="Product" default="${app.name}" />
        <widget type="literal" label="Version" default="${app.version}" />
	<widget type="file" name="SSL key files (tar)" label="ssl_key_tar">
	  <require response="1"/>
	</widget>
        <widget type="hidden" label="use_ssl" default="1" />
      </rhn-form>
    </collect-data>

    <activity description="Lookup Parent IP Address" 
	      acl="session_data_true(enable_monitoring)">
      <method-call class="RHN::ProxyInstall" method="load_ip_address" />
    </activity>

    <collect-data description="Configure Spacewalk Monitoring Proxy" acl="session_data_true(enable_monitoring)">

      <header>
        Configure the Monitoring aspects of your ${app.name} below.
      </header>

      <rhn-form name="Configure Monitoring Proxy" label="configure_monitoring_proxy">
        <widget type="literal" label="Product" default="${app.name}" />
        <widget type="literal" label="Version" default="${app.version}" />
        <widget type="text" name="Spacewalk Parent Server Hostname" label="rhn_monitoring_parent" size="40" default="${session.rhn_parent}">
          <require response="1"/>
	  <require fqdn="1"/>
          <filter type="text" />
	</widget>
        <widget type="text" name="Spacewalk Parent Server IP Address" label="rhn_monitoring_parent_ip" size="15" default="${session.rhn_parent_ip}">
          <require response="1"/>
          <require valid-ip="1"/>
          <filter type="text" />
	</widget>
        <widget type="hidden" label="enable_monitoring_scout" default="1"/>
      </rhn-form>

    </collect-data>

    <activity description="Provisioning entitle system">
      <set-system-entitlement>provisioning_entitled</set-system-entitlement>
    </activity>

    <activity description="Create ${app.name} Config Channel for system">
      <create-config-channel>
        <org-id>${user.org_id}</org-id>
        <type>normal</type>
        <name>${app.name} Config Channel for ${system.name}</name>
        <label>rhn_proxy_config_${system.id}</label>
        <description>This config channel is for the ${app.name} application running on ${system.name} (${system.id})</description>
      </create-config-channel>
    </activity>

    <activity description="Subscribe to ${app.name} Config Channel">
      <subscribe-system-to-config-channel channel-label="rhn_proxy_config_${system.id}" order="first"/>
    </activity>

    <activity description="Import SSL server cert into Config Channel" 
	      acl="not global_config(satellite)">
      <method-call class="RHN::ProxyInstall" method="import_ssl_cert">
        <target-config-channel>rhn_proxy_config_${system.id}</target-config-channel>
        <cert-tar>${session.ssl_key_tar}</cert-tar>
      </method-call>
    </activity>

    <activity description="Generate SSL server cert" acl="global_config(ssl_available);global_config(satellite)">
      <method-call class="RHN::ProxyInstall" method="generate_ssl_cert">
        <hostname>${session.hostname}</hostname>
        <ca-cert-password>${session.ca_cert_password}</ca-cert-password>
        <org>${session.org}</org>
        <org-unit>${session.org-unit}</org-unit>
        <email>${session.email}</email>
        <city>${session.city}</city>
        <state>${session.state}</state>
        <country>${session.country}</country>
        <cert-expiration>${session.cert-expiration}</cert-expiration>
	<target-config-channel>rhn_proxy_config_${system.id}</target-config-channel>
      </method-call>
    </activity>

    <activity description="Create SatCluster record for Spacewalk Monitoring Proxy" acl="session_data_true(enable_monitoring)">
      <method-call class="RHN::ProxyInstall" method="create_sat_cluster_record">
        <customer-id>${user.org_id}</customer-id>
        <description>${app.name} ${system.name} (${system.id})</description>
	<last-update-user>installer</last-update-user>
      </method-call>
    </activity>

    <activity description="Generate /etc/rhn/rhn.conf config file">
      <generate-config-file target-config-channel="rhn_proxy_config_${system.id}" path="/etc/rhn/rhn.conf"
			    template="rhn.conf" mode="640" username="root" groupname="apache"/>
    </activity>

    <activity description="Generate /etc/rhn/cluster.ini config file" acl="session_data_true(enable_monitoring)">
      <generate-config-file target-config-channel="rhn_proxy_config_${system.id}" path="/etc/rhn/cluster.ini"
			    template="cluster.ini" mode="644" username="root" groupname="root"/>
    </activity>

    <activity description="Generate /etc/squid/squid.conf config file">
      <generate-config-file target-config-channel="rhn_proxy_config_${system.id}" path="/etc/squid/squid.conf"
			    template="squid.conf" mode="755"/>
    </activity>

    <activity description="Generate /etc/httpd/conf/httpd.conf config file">
      <generate-config-file target-config-channel="rhn_proxy_config_${system.id}" path="/etc/httpd/conf/httpd.conf"
			    template="httpd/httpd.conf" mode="444"/>
    </activity>

    <activity description="Generate /etc/httpd/conf/rhn_proxy.conf config file">
      <generate-config-file target-config-channel="rhn_proxy_config_${system.id}" path="/etc/httpd/conf/rhn_proxy.conf"
			    template="httpd/rhn_proxy.conf" mode="640" username="root" groupname="apache"/>
    </activity>

    <activity description="Generate /etc/jabberd/c2s.xml config file"
	      acl="global_config(ssl_available);session_data_true(enable_osad)">
      <generate-config-file target-config-channel="rhn_proxy_config_${system.id}" path="/etc/jabberd/c2s.xml"
			    template="jabberd/c2s.xml" mode="644" username="root" groupname="root"/>
    </activity>

    <activity description="Generate /etc/jabberd/sm.xml config file"
	      acl="global_config(ssl_available);session_data_true(enable_osad)">
      <generate-config-file target-config-channel="rhn_proxy_config_${system.id}" path="/etc/jabberd/sm.xml"
			    template="jabberd/sm.xml" mode="644" username="root" groupname="root"/>
    </activity>

    <activity description="Activate the ${app.name}">
      <method-call class="RHN::ProxyInstall" method="activate_proxy">
        <version>${app.version}</version>
      </method-call>
    </activity>

    <schedule-actions description="Schedule ${app.name} install">
      <remove-packages>
        <rpm>python-xmlrpc</rpm>
      </remove-packages>

      <install-packages>
        <rpm>rhns-proxy-management</rpm>
        <rpm acl="session_data_true(enable_monitoring)">rhns-proxy-monitoring</rpm>
      </install-packages>

      <deploy-configs>
        <action-name>Deploy Configuration</action-name>
        <configfile>/etc/rhn/rhn.conf</configfile>
        <configfile acl="session_data_true(enable_monitoring)">/etc/rhn/cluster.ini</configfile>
        <configfile>/etc/squid/squid.conf</configfile>
        <configfile>/etc/httpd/conf/httpd.conf</configfile>
        <configfile>/etc/httpd/conf/rhn_proxy.conf</configfile>
        <configfile acl="global_config(ssl_available) or not global_config(satellite)">/etc/httpd/conf/ssl.crt/server.crt</configfile>
        <configfile acl="global_config(ssl_available) or not global_config(satellite)">/etc/httpd/conf/ssl.csr/server.csr</configfile>
        <configfile acl="global_config(ssl_available) or not global_config(satellite)">/etc/httpd/conf/ssl.key/server.key</configfile>
        <configfile acl="session_data_true(org_ssl_cert)">/usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT</configfile>
        <configfile acl="global_config(ssl_available) or not global_config(satellite)">/var/www/html/pub/RHN-ORG-TRUSTED-SSL-CERT</configfile>
        <configfile acl="session_data_true(ca_rpm)">${session.ca_rpm}</configfile>
        <configfile acl="global_config(ssl_available);session_data_true(enable_osad)">/etc/jabberd/server.pem</configfile>
        <configfile acl="global_config(ssl_available);session_data_true(enable_osad)">/etc/jabberd/c2s.xml</configfile>
        <configfile acl="global_config(ssl_available);session_data_true(enable_osad)">/etc/jabberd/sm.xml</configfile>
      </deploy-configs> 

      <run-script acl="session_data_true(enable_monitoring)">
        <action-name>Enable Monitoring Services</action-name>
        <script>
#!/bin/sh

/etc/rc.d/np.d/step MonitoringScout install
        </script>
      </run-script>

      <run-script>
        <action-name>Allow Proxy service to read Spacewalk Configuration</action-name>
        <script>
#!/bin/sh
chown root.apache /etc/sysconfig/rhn/systemid
chmod 640 /etc/sysconfig/rhn/systemid
	</script>
      </run-script>

      <restart-services>
        <action-name>Start ${app.name}</action-name>
        <service>rhn-proxy</service>
      </restart-services>
    </schedule-actions>

    <redirect save-session="1">/network/systems/details/proxy/install_progress.pxt?sid=${system.id}&amp;version=${app.version}</redirect>

  </install>

  <install-progress acl="action_pending_named(Start Spacewalk Proxy) or last_action_attempt_failed(Start Spacewalk Proxy)">

    <action-status description="Install progress">
      <header>
You are installing ${app.name} on this system.  Below is the list of actions for this installation.
      </header>

      <inprogress>
        Once these actions are complete, your ${app.name} should be available for use.
      </inprogress>

      <complete>
        The installation is complete.
      </complete>

      <failed>
        The installation has failed.  Click on the failed action for
        more details, resolve the error that prevented installation,
        and 
<a href="/network/systems/details/proxy/index.pxt?sid=${system.id}&amp;version=${app.version}">try your installation again</a>.
        Or, you can
<a href="/network/systems/details/proxy.pxt?sid=${system.id}&amp;pxt_trap=rhn:cancel_scheduled_proxy_install_cb">cancel this installation process</a>.
      </failed>

      <target-action name="Start ${app.name}" show-chain="1"/>
    </action-status>

  </install-progress>

  <configure>
    <activity description="Create ${app.name} Config Channel for system if does not already exist">
      <create-config-channel>
        <org-id>${user.org_id}</org-id>
        <type>normal</type>
        <name>${app.name} Config Channel for ${system.name}</name>
        <label>rhn_proxy_config_${system.id}</label>
        <description>This config channel is for the ${app.name} application running on ${system.name} (${system.id})</description>
      </create-config-channel>
    </activity>

    <activity description="Subscribe to ${app.name} Config Channel">
      <subscribe-system-to-config-channel channel-label="rhn_proxy_config_${system.id}" order="first"/>
    </activity>

    <activity description="Generate /etc/rhn/rhn.conf config file">
      <generate-config-file target-config-channel="rhn_proxy_config_${system.id}" path="/etc/rhn/rhn.conf"
			    template="rhn.conf" mode="640" username="root" groupname="apache" new_only="1"/>
    </activity>


    <activity description="Load current configuration">
      <method-call class="RHN::ProxyInstall" method="load_configfile_into_session">
        <target-config-channel>rhn_proxy_config_${system.id}</target-config-channel>
        <target-config-file>/etc/rhn/rhn.conf</target-config-file>
      </method-call>
    </activity>

    <collect-data description="Configure ${app.name}">

      <header>
<p>
Configure your ${app.name} below.  The Administrator Email Address is
the address to which system status e-mail will be sent.  Please note
that if you have modified the configuration locally on the proxy
without importing those changes into the Proxy Config Channel for this
system, this action will overwrite those changes.
</p>
<p>
Also, configuration changes here will not update the configuration for
the up2date client.  Only the ${app.name} application will be
configured.  For instance, if you want this system to connect through
an HTTP proxy, you will need to configure the ${app.name} software
here, and configure the up2date client separately.
</p>
<p>
 When using an HTTP Proxy Server, use the format "servername:port" to specify the server.  For example: "proxy-server.corp.com:8888".
</p>
      </header>

      <rhn-form name="Configure Proxy" label="configure_proxy">
        <widget type="literal" label="Product" default="${app.name}" />
        <widget type="literal" label="Version" default="${app.version}" />
        <widget type="text" name="Administrator Email Address" label="traceback_mail" size="40" default="${session.traceback_mail}">
          <require valid-email="1" />
        </widget>
        <widget type="text" name="HTTP Proxy Server" label="proxy.http_proxy" size="30" default="${session.proxy.http_proxy}">
          <filter type="text" />
        </widget>
        <widget type="text" name="HTTP Proxy Username" label="proxy.http_proxy_username" size="10" default="${session.proxy.http_proxy_username}">
          <filter type="text" />
        </widget>
        <widget type="text" name="HTTP Proxy Password" label="proxy.http_proxy_password" size="10" default="${session.proxy.http_proxy_password}">
          <filter type="text" />
        </widget>
      </rhn-form>

    </collect-data>

    <activity description="Update ${app.name} Configuration">
      <method-call class="RHN::ProxyInstall" method="update_configfile_from_session">
        <target-config-channel>rhn_proxy_config_${system.id}</target-config-channel>
        <target-config-file>/etc/rhn/rhn.conf</target-config-file>
      </method-call>
    </activity>

    <schedule-actions description="Schedule ${app.name} install">

      <deploy-configs>
        <configfile>/etc/rhn/rhn.conf</configfile>
      </deploy-configs> 

      <restart-services>
        <action-name>Start ${app.name}</action-name>
        <service>rhn-proxy</service>
      </restart-services>

    </schedule-actions>

    <collect-data description="Configuration update scheduled" no-cancel="1">
      <header>
Reconfiguration actions for ${app.name} ${app.version} have been scheduled.
      </header>

      <rhn-form name="Installation Complete" label="install_complete">
        <widget type="literal" label="Product" default="${app.name}" />
        <widget type="literal" label="Version" default="${app.version}" />
        <widget type="hidden" label="continue_redir" default="/rhn/systems/details/Overview.do" />
      </rhn-form>

    </collect-data>

  </configure>

  <remove>

    <collect-data description="Deactivate ${app.name}">

      <header>
You can deactivate your ${app.name}.  The ${app.name} services on the system
will be stopped, and it will not show up as a Proxy in the Spacewalk web
interface.  The packages set and configuration of the system will not
otherwise be affected.  Systems that connect to Spacewalk through this
proxy will need to be reconfigured to use a different Spacewalk server.
      </header>

      <rhn-form name="Deactivate Proxy" label="deactivate_proxy">
        <widget type="literal" label="Product" default="${app.name}" />
        <widget type="literal" label="Version" default="${app.version}" />
      </rhn-form>

    </collect-data>

    <activity description="Deactivate ${app.name} in local configuration">
      <method-call class="RHN::ProxyInstall" method="deactivate_proxy"/>
    </activity>

    <schedule-actions description="Deactivate ${app.name}">

      <stop-services>
        <action-name>Stop ${app.name} Services</action-name>
        <service>rhn-proxy</service>
      </stop-services>

    </schedule-actions>

    <collect-data description="Proxy deactivation scheduled" no-cancel="1">
      <header>
A deactivation for ${app.name} ${app.version} on ${system.name} has been scheduled.
      </header>

      <rhn-form name="Deactivation Complete" label="deactivation_complete">
        <widget type="literal" label="Product" default="${app.name}" />
        <widget type="literal" label="Version" default="${app.version}" />
        <widget type="hidden" label="continue_redir" default="/rhn/systems/details/Overview.do" />
      </rhn-form>
    </collect-data>

  </remove>

</application>
