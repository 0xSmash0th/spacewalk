#!/usr/bin/perl -w
use strict;
use lib '/tmp/lib';
use Dobby::DB;
use Dobby::Files;
use Dobby::BackupLog;
use POSIX;

my $usage = "Usage: $0 DIR";

$|++;

my $d = new Dobby::DB;
$d->assert_local;

my $restore_log = shift;
die $usage unless $restore_log;
die "Database is currently running; please stop it before restoring a backup.\n" if $d->instance_state ne 'OFFLINE';

my $log = Dobby::BackupLog->parse($restore_log);

if ($log->type ne 'hot') {
  die "Error: backup not a cold backup.\n";
}

printf "Restoring backup from %s...\n", scalar localtime $log->start;
for my $ts_entry (@{$log->tablespaces}) {
  printf "Tablespace %s...\n", $ts_entry->name;

  for my $file_entry (@{$ts_entry->files}) {
    # to and from reverse since their names come from the backup script itself
    printf "  %s -> %s... ", $file_entry->to, $file_entry->from;
    my $digest = Dobby::Files->gunzip_copy($file_entry->to, $file_entry->from);

    if ($digest ne $file_entry->digest) {
      printf "done.  (WARNING: checksum mismatch: %s vs %s)\n", $digest,  $file_entry->digest;
    }
    else {
      print "done.  Checksum verified.\n";
    }
  }
}

printf "Archive logs...\n";

for my $file_entry (@{$log->archive_logs}) {
  # to and from reverse since their names come from the backup script itself
  printf "  %s -> %s... ", $file_entry->to, $file_entry->from;
  my $digest = Dobby::Files->gunzip_copy($file_entry->to, $file_entry->from);

  if ($digest ne $file_entry->digest) {
    printf "done.  (WARNING: checksum mismatch: %s vs %s)\n", $digest,  $file_entry->digest;
  }
  else {
    print "done.  Checksum verified.\n";
  }
}

$d->database_startup("MOUNT");
$d->sqlplus_nolog("RECOVER AUTOMATIC DATABASE;");
$d->database_shutdown("IMMEDIATE");
