#!/usr/bin/perl -w
use strict;
use lib '/tmp/lib';
use Dobby::DB;
use Dobby::Files;
use Dobby::BackupLog;
use File::Spec;
use POSIX;

$|++;

my $d = new Dobby::DB;
$d->assert_local;

my $backup_dir = sprintf($d->config->get("cold_backup_dir_format"), $d->sid, 1);

die "Error: backup dir '$backup_dir' does not exist.\n" unless -d $backup_dir;
die "Database not running; please start before running a hot backup.\n" if $d->instance_state ne 'OPEN';

my @tablespaces = $d->tablespaces;
my @todo;

my $log = new Dobby::BackupLog;
$log->sid($d->sid);
$log->start(time);

for my $ts (@tablespaces) {
  push @todo, $ts->{NAME} if $ts->{TYPE} eq 'PERMANENT';
}

print "Initiating hot backup of database ", $d->sid, "...\n";

my $start = time;
for my $ts (@todo) {
  print "Tablespace $ts...\n";

  $d->tablespace_begin_backup($ts);

  my $ts_entry = new Dobby::BackupLog::TablespaceEntry;
  $ts_entry->start(time);
  $ts_entry->name($ts);

  for my $df ($d->tablespace_datafiles($ts)) {
    my $file_entry = Dobby::Files->backup_file($df->{FILENAME}, $backup_dir);

    $ts_entry->add_file_entry($file_entry);
  }

  $d->tablespace_end_backup($ts);

  $log->add_tablespace_entry($ts_entry);
}

# grab archive logs.  turn off archive log writing temporarily, get
# the file list, then re-enable

$d->sqlplus_nolog("ARCHIVE LOG STOP;");
print "Backing up archive logs...\n";

# get the list of archive logs...
my $archive_log_dir = $d->archive_log_dir;
opendir DIR, $archive_log_dir or die "opendir $archive_log_dir: $!";
my @archive_logs = grep { /\.arc$/ } map { File::Spec->catfile($archive_log_dir, $_) } readdir DIR;
closedir DIR;

$d->sqlplus_nolog("ARCHIVE LOG START;");

# ... and back them up
for my $file (@archive_logs) {
  my $file_entry = Dobby::Files->backup_file($file, $backup_dir);
  $log->add_archive_log($file_entry);
}

print "Removing saved archive logs...\n";
unlink @archive_logs;

# now snag the controlfile
$d->sqlplus_nolog(sprintf "ALTER DATABASE BACKUP CONTROLFILE TO '%s/rhnsat-controlfile.back';", $backup_dir);
$log->control_file('rhnsat-controlfile.back');

$log->finish(time);
$log->serialize("$backup_dir/backup-log.dat");

print "Full hot backup complete.\n";

