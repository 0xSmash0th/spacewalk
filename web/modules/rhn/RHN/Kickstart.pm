#
# Copyright (c) 2008 Red Hat, Inc.
#
# This software is licensed to you under the GNU General Public License,
# version 2 (GPLv2). There is NO WARRANTY for this software, express or
# implied, including the implied warranties of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2
# along with this software; if not, see
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.
# 
# Red Hat trademarks are not licensed under GPLv2. No permission is
# granted to use or replicate Red Hat trademarks that are incorporated
# in this software or its documentation. 
#

use strict;

package RHN::Kickstart;

use Params::Validate qw/:all/;
Params::Validate::validation_options(strip_leading => "-");

use RHN::DB::Kickstart;
our @ISA = qw/RHN::DB::Kickstart/;
use RHN::Kickstart::Commands;
use RHN::Kickstart::Packages;

use RHN::SessionSwap;

use PXT::Utils;

our @simple_struct_fields = @RHN::DB::Kickstart::simple_struct_fields;

sub render {
  my $self = shift;

  my $text = shift || <<EOQ;
# Kickstart config file generated by RHN Config Management
#
# Profile Name: {kickstart_name}
# Profile Label: {kickstart_label}
#
{kickstart_commands}

%packages {kickstart_package_options}

{kickstart_packages}

%pre
{kickstart_pre}

{kickstart_interpreter_pre}

%post --nochroot
{kickstart_nochroot_post}

{kickstart_interpreter_post}

%post
{kickstart_post}
# end of generated kickstart file
EOQ

  my %subs;

  $subs{"kickstart_${_}"} = $self->$_ foreach qw/name label pre post nochroot_post/;
  $subs{kickstart_commands} = $self->commands ? $self->commands->render : '# No commands section defined for kickstart profile';
  $subs{kickstart_package_options} = $self->render_package_options || '';
  $subs{kickstart_packages} = $self->packages->render || '';
  $subs{kickstart_interpreter_post} = $self->render_interpreter_post || '';
  $subs{kickstart_interpreter_pre} = $self->render_interpreter_pre || '';

  my $ret = PXT::Utils->perform_substitutions($text, \%subs);

  return $ret;
}

sub render_package_options {
  my $self = shift;

  my $options = join(" ", map { "--${_}" } @{$self->package_options}) || '';

  return $options;
}

sub render_interpreter_post {
  my $self = shift;
  my $post = '';
  $post = '%post --interpreter ' 
			.  $self->interpreter_post_val 
			. "\n" . $self->interpreter_post_script if $self->interpreter_post_val;
  return $post; 
}

sub render_interpreter_pre {
  my $self = shift;
  my $pre = '';
  $pre = '%pre --interpreter ' 
			. $self->interpreter_pre_val 
			. "\n" . $self->interpreter_pre_script if $self->interpreter_pre_val;
  return $pre; 
}

1;
