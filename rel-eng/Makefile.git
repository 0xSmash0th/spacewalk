
ifndef SPECFILE
SPECFILE := $(firstword $(wildcard *.spec))
endif

ifndef NAME
ifdef SPECFILE
NAME := $(shell rpm -q --qf '%{name}\n' --specfile $(SPECFILE))
endif
endif

THIS_MAKEFILE := $(realpath $(lastword $(MAKEFILE_LIST)))
README_FILE = $(wildcard $(dir $(THIS_MAKEFILE))README)

GIT_CHECKOUT_DIR := $(CURDIR)
override GIT_COMMIT_ID := $(shell git-rev-parse --verify HEAD)

VERSION_FILE := version

EXISTING_ARCHIVES := $(wildcard *.tar.gz *.zip *.jar)
EXISTING_SRC_RPM := $(wildcard *.src.rpm)

ifdef KEEP_VERSION
BUMP_VERSION := check-keep-version
else
BUMP_VERSION := bump-version
endif

RPMBUILD := $(shell if test -f /usr/bin/rpmbuild ; then echo rpmbuild ; else echo rpm ; fi)
RPMBUILD_CURDIR = --define "_sourcedir $(CURDIR)" \
                --define "_builddir $(CURDIR)" \
                --define "_srcrpmdir $(CURDIR)" \
                --define "_rpmdir $(CURDIR)"

ifdef DO_TAR_GZ
ifeq (git-tree-sha1,$(DO_TAR_GZ))
override NAME_TAR_GZ_DIR = $(NAME)-git-$(GIT_COMMIT_ID)
else ifeq (version,$(DO_TAR_GZ))
override NAME_TAR_GZ_DIR = $(NAME)-$(shell awk '{print $$1}' $(VERSION_FILE))
else
$(error Unsupported DO_TAR_GZ parameter $(DO_TAR_GZ))
endif
override NAME_TAR_GZ = $(NAME_TAR_GZ_DIR).tar.gz
endif

TODAY = $(shell LC_ALL=C date +"%a %b %_d %Y")

help :
	@if test -n "$(README_FILE)" -a -f "$(README_FILE)" ; then \
		cat $(README_FILE) ; \
		else echo "The README file with help was not found."; fi

test-srpm : md5sum-tar-gz-to-sources
	$(RPMBUILD) $(RPMBUILD_CURDIR) --nodeps -bs $(SPECFILE)
	@if test -f $(NAME_TAR_GZ) ; then echo "Clearing [$(NAME_TAR_GZ)]" ; rm -f $(NAME_TAR_GZ) ; fi

bump-version : test-version
	@for version_file in $(VERSION_FILE) $(VERSION_FILES) ; do \
		ORIG_VERSION=`cat $$version_file` ; \
		BUMPED_VERSION=`perl -pe 's!^(\S+\s(.+\.)*)(\d+)([\.%].+)?$$!$$1 . ($$3 + 1) . $$4!e' $$version_file` ; \
		if test -z "$$BUMPED_VERSION" ; then echo "Failed to bump the version [$$ORIG_VERSION] (got empty)." ; exit 1 ; fi ; \
		if test "x$$ORIG_VERSION" == "x$$BUMPED_VERSION" ; then echo "Failed to bump the version [$$ORIG_VERSION] (got the same)." ; exit 1 ; fi ; \
		echo "Bumping $$version_file from [$$ORIG_VERSION] to [$$BUMPED_VERSION]." ; \
		echo $$BUMPED_VERSION > $$version_file ; \
	done

check-keep-version : test-version
	@ORIG_VERSION=`cat $(VERSION_FILE)`; \
		if test "x$$ORIG_VERSION" != "x$(KEEP_VERSION)" ; then \
		echo "Version mismatch: current [$$ORIG_VERSION], KEEP_VERSION parameter [$(KEEP_VERSION)]." ; exit 1 ; fi
	@echo "Keeping version at [$(KEEP_VERSION)]."

test-version :
	@ORIG_VERSION=`cat $(VERSION_FILE) 2> /dev/null`; \
		if test -z "$$ORIG_VERSION" ; then \
		echo "Failed to retrieve the original version -- version file [$(VERSION_FILE)] does not exist?" ; exit 1 ; fi

prepare-tar-gz :
	@if test -n "$(EXISTING_SRC_RPM)" ; then \
		echo "Removing existing [$(EXISTING_SRC_RPM)]" ; \
		rm -f $(EXISTING_SRC_RPM) ; \
		fi
	@if test -f $(NAME_TAR_GZ) ; then \
		echo "Removing previous [$(NAME_TAR_GZ)] prior to tar" ; \
		rm -f $(NAME_TAR_GZ) ; \
	fi

git-archive-to-tar-gz : prepare-tar-gz
	@echo "Creating [$(NAME_TAR_GZ)]" && \
		git archive --format=tar --prefix=$(NAME_TAR_GZ_DIR)/ HEAD | gzip -n -c - > $(NAME_TAR_GZ)

md5sum-tar-gz-to-sources : git-archive-to-tar-gz
	@md5sum $(NAME_TAR_GZ) > sources

clear-tar-gz :
	@if test -f $(NAME_TAR_GZ) ; then rm -f $(NAME_TAR_GZ) ; fi

update-changelog :
	@if ! perl -0777 -i -pe 'BEGIN { local $$/ = "\n"; open V, "version" and $$version = <V> ; close V; chomp $$version ; $$version =~ s!\s!-!g; }' \
		-e 'if (not s/(\n%changelog\n\* $(TODAY).+?)\s*(\d\S+)?\n/$$1 $$version\n/) { print ; exit 1 }' $(SPECFILE) ; then \
		echo "Did not find line" ;\
		echo "* $(TODAY) Your Name <youremail@redhat.com> ..." ; \
		echo "as the first line of %changelog -- couldn't update version in changelog." ; \
		exit 1 ; \
	fi

test-rpm : md5sum-tar-gz-to-sources
	$(RPMBUILD) $(RPMBUILD_CURDIR) --nodeps --clean -ba $(SPECFILE)
	@if test -f $(NAME_TAR_GZ) ; then echo "Clearing [$(NAME_TAR_GZ)]" ; rm -f $(NAME_TAR_GZ) ; fi

.PHONY : test-version bump-version check-keep-version \
	test-srpm test-rpm \
	md5sum-tar-gz-to-sources git-archive-to-tar-gz prepare-tar-gz \
	clear-tar-gz \
	update-changelog \
	help

