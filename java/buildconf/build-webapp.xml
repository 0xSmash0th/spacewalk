<?xml version="1.0"?>
                                                                              
<project name="build-webapp">

    <!-- =================== Deployment Tasks ======================= -->

    <!-- Removes all web applications defined in webapps -->
    <target name="remove" depends="init-taskdefs">
        <foreach list="${rhnapp}" target="remove-webapp" param="webapp" />
    </target>

    <!-- Deploys all web applications defined in webapps -->
    <target name="deploy" depends="init-taskdefs">
        <foreach list="${rhnapp}" target="deploy-webapp" param="webapp" />
    </target>

    <!-- Reloads all web applications defined in webapps -->
    <target name="reload" depends="init-taskdefs">
        <foreach list="${rhnapp}" target="reload-webapp" param="webapp" />
    </target>

    <!-- starts all web applications defined in webapps -->
    <target name="start" depends="init-taskdefs">
        <foreach list="${rhnapp}" target="start-webapp" param="webapp" />
    </target>

    <!-- stops all web applications defined in webapps -->
    <target name="stop" depends="init-taskdefs">
        <foreach list="${rhnapp}" target="stop-webapp" param="webapp" />
    </target>

    <!-- Lists webapps -->
    <target name="list" depends="init-taskdefs">
        <list url="http://${catalina.hostname}:${catalina.port}/manager"
                username="${catalina.username}"
                password="${catalina.password}" />
    </target>

    <!-- Deploys the web application defined by webapp-->
    <target name="deploy-webapp" if="webapp">
        <deploy url="http://${catalina.hostname}:${catalina.port}/manager"
                username="${catalina.username}"
                password="${catalina.password}"
                path="/${webapp}"
                war="file:${build.dir}/webapp/${webapp}.war" />
    </target>

    <!-- Reloads the web application defined by webapp-->
    <target name="reload-webapp" if="webapp">
        <reload url="http://${catalina.hostname}:${catalina.port}/manager"
                username="${catalina.username}"
                password="${catalina.password}"
                path="/${webapp}" />
    </target>

    <!-- Start the web application defined by webapp-->
    <target name="start-webapp" if="webapp">
        <start url="http://${catalina.hostname}:${catalina.port}/manager"
                username="${catalina.username}"
                password="${catalina.password}"
                path="/${webapp}" />
    </target>

    <!-- Stop the web application defined by webapp-->
    <target name="stop-webapp" if="webapp">
        <stop url="http://${catalina.hostname}:${catalina.port}/manager"
                username="${catalina.username}"
                password="${catalina.password}"
                path="/${webapp}" />
    </target>

    <!-- Removes the web application defined by webapp-->
    <target name="remove-webapp" if="webapp">
        <remove url="http://${catalina.hostname}:${catalina.port}/manager"
                username="${catalina.username}"
                password="${catalina.password}" 
                path="/${webapp}" />
    </target>


    <!-- ================ Local Deployment Tasks ==================== -->
    <!--
      - Creates a local web application structure easily reloadable in
      - Tomcat.
      -->

    <target name="clean-webapp-dir"
      description="Cleans up the web application directory.">
        <!--
          - cleanup the directory first, we can not use
          - the delete target because it follows the symlinks
          - deleting way more than we want.  And we can't use
          - "symlink action="delete" because we don't have the 
          - actualy symlink name since they are being auto
          - generated by the for target.
          -->
        <exec executable="rm" os="Linux" dir="${webapp.basedir}">
            <arg value="-rf"/>
            <arg value="${webapp.name}"/>
        </exec>
    </target>

    <target name="create-webapp-dir" depends="init-taskdefs,clean-webapp-dir,apidoc-jsp"
      description="Creates a local web application structure easily reloadable in Tomcat.">

        <!-- Setup directories that can not be symlinked -->
        <!-- Also creates WEB-INF -->
        <mkdir dir="${webapp.dir}" />
        <mkdir dir="${webapp.dir}/META-INF" />
        <mkdir dir="${webapp.dir}/WEB-INF/lib" />
        <mkdir dir="${webapp.dir}/apidoc" />

     
        <!--
          - The for task takes each item in the fileset placing
          - it in the jspfiles parameter.  Then it calls the
          - tasks within the sequential block.
          -->
        <for param="jspfiles">
            <path>
                <fileset dir="${src.dir}/webapp" includes="*.jsp" />
            </path>
            <sequential>
               <symlink failonerror="false" link="${webapp.dir}" 
                        resource="@{jspfiles}"/>
            </sequential>
        </for>

        <for param="xmlfiles">
            <path>
                <fileset dir="${src.dir}/webapp/WEB-INF">
                    <include name="*.xml" />
                </fileset>
            </path>
            <sequential>
               <symlink failonerror="false" link="${webapp.dir}/WEB-INF" 
                        resource="@{xmlfiles}"/>
            </sequential>
        </for>

        <for param="externaljar">
            <path>
                <fileset dir="${run-external.lib.dir}">
                    <!--
                      - We need to keep the Oracle drivers
                      - out of the WEB-INF/lib directory.
                      - Otherwise, we run into JNI issues
                      - when reloading webapps.
                      - Alternatively, we could use the 
                      - thin driver. :)
                      -->
                    <exclude name="**/oracle-jdbc*" />
                    <exclude name="**/servlet*" />
                </fileset>
            </path>
            <sequential>
               <symlink link="${webapp.dir}/WEB-INF/lib" 
                        resource="@{externaljar}"/>
            </sequential>
        </for>
	
        <for param="apidoc">
	   <path>
              <dirset dir="${report.dir}/apidocs/jsp/handlers/" />
           </path>
            <sequential>
               <symlink link="${webapp.dir}/apidoc/" 
                        resource="@{apidoc}"/>
            </sequential>
        </for>

        <for param="apidoc">
           <fileset dir="${report.dir}/apidocs/jsp/" includes="*.jsp" />
            <sequential>
               <symlink link="${webapp.dir}/apidoc/" 
                        resource="@{apidoc}"/>
            </sequential>
        </for>

        <symlink overwrite="true" link="${webapp.dir}/newlogin" 
                 resource="${src.dir}/webapp/newlogin"/>
        <symlink overwrite="true" link="${webapp.dir}/help" 
                 resource="${src.dir}/webapp/help"/>

        <!-- symlink link resource = ln -s resource link -->

        <symlink overwrite="true" link="${webapp.dir}/css" 
                 resource="${src.dir}/webapp/css"/>
        <symlink overwrite="true" link="${webapp.dir}/users" 
                 resource="${src.dir}/webapp/users"/>
        <symlink overwrite="true" link="${webapp.dir}/errata" 
                 resource="${src.dir}/webapp/errata"/>
        <symlink overwrite="true" link="${webapp.dir}/systems" 
                 resource="${src.dir}/webapp/systems"/>
        <symlink overwrite="true" link="${webapp.dir}/schedule" 
                 resource="${src.dir}/webapp/schedule"/>
        <symlink overwrite="true" link="${webapp.dir}/errors"
                 resource="${src.dir}/webapp/errors"/>
        <symlink overwrite="true" link="${webapp.dir}/WEB-INF/pages" 
                 resource="${src.dir}/webapp/WEB-INF/pages"/>
        <symlink overwrite="true" link="${webapp.dir}/WEB-INF/decorators" 
                 resource="${src.dir}/webapp/WEB-INF/decorators"/>
        <symlink overwrite="true" link="${webapp.dir}/WEB-INF/includes" 
                 resource="${src.dir}/webapp/WEB-INF/includes"/>
        <symlink overwrite="true" link="${webapp.dir}/WEB-INF/classes" 
                 resource="${build.dir}/classes"/>
        <symlink overwrite="true" link="${webapp.dir}/WEB-INF/nav" 
                 resource="${src.dir}/webapp/WEB-INF/nav"/>

    </target>

    <!-- Installation tasks-->

  <target name="install-taskomatic"
          description="Used to run taskomatic on your local workstation">
	  <echo message="NOTE: This task should be run as root since it modifies /etc and /usr/bin" />
	  <symlink link="/etc/rhn/default/rhn_taskomatic_daemon.conf" resource="${rhn-home}/conf/default/rhn_taskomatic_daemon.conf" />
	  <symlink link="/etc/rhn/default/rhn_taskomatic.conf" resource="${rhn-home}/conf/default/rhn_taskomatic.conf" />
	  <symlink link="/etc/rhn/default/rhn_org_quartz.conf" resource="${rhn-home}/conf/default/rhn_org_quartz.conf" />
	  <symlink link="/etc/init.d/taskomatic" resource="${rhn-home}/scripts/taskomatic" />
	  <symlink link="/usr/bin/taskomaticd" resource="${rhn-home}/scripts/taskomaticd" />
	  <chmod file="${rhn-home}/scripts/taskomaticd" perm="755" />
	  <chmod file="${rhn-home}/scripts/taskomatic" perm="755" />
  </target>

  <target name="uninstall-taskomatic"
          description="Used to uninstall taskomatic from your local workstation">
	  <echo message="NOTE: This task should be run as root since it modifies /etc and /usr/bin" />
	  <echo message="This target should be run as root since it modifies /etc and /usr/bin" />
	  <delete file="/etc/rhn/default/rhn_taskomatic_daemon.conf" />
	  <delete file="/etc/rhn/default/rhn_taskomatic.conf" />
	  <delete file="/etc/rhn/default/rhn_org_quartz.conf" />
	  <delete file="/etc/init.d/taskomatic" />
	  <delete file="/usr/bin/taskomaticd" />
  </target>

  <target name="install-web"
          description="Used to setup the perl side of spacewalk  devel environment">
      <move file="/var/www/html" tofile="/var/www/html.old" failonerror="false"/>
      <symlink link="/var/www/html" resource="${git.home}/web/html"/>
      <mkdir dir="/var/www/lib"/>
      <symlink link="/var/www/lib/Cypress" resource="${git.home}/web/modules/cypress/Cypress"/>
      <symlink link="/var/www/lib/Dobby" resource="${git.home}/web/modules/dobby/Dobby"/>
      <symlink link="/var/www/lib/Grail" resource="${git.home}/web/modules/grail/Grail"/>
      <symlink link="/var/www/lib/Moon" resource="${git.home}/web/modules/moon/Moon"/>
      <symlink link="/var/www/lib/PXT" resource="${git.home}/web/modules/pxt/PXT"/>
      <symlink link="/var/www/lib/RHN" resource="${git.home}/web/modules/rhn/RHN"/>
      <symlink link="/var/www/lib/Sniglets" resource="${git.home}/web/modules/sniglets/Sniglets"/>
   </target>

   <target name="uninstall-web" description="Used to uninstall the perl side of spacewalk  devel environment">
      <symlink action="delete"  link="/var/www/lib/Cypress"/>
      <symlink action="delete"  link="/var/www/lib/Dobby"/>
      <symlink action="delete"  link="/var/www/lib/Grail"/>
      <symlink action="delete"  link="/var/www/lib/Moon"/>
      <symlink action="delete"  link="/var/www/lib/PXT"/>
      <symlink action="delete"  link="/var/www/lib/RHN"/>
      <symlink action="delete"  link="/var/www/lib/Sniglets"/>
      <delete dir = "/var/www/lib"/>
      <symlink action="delete" link="/var/www/html"/>
      <move file="/var/www/html.old" tofile="/var/www/html" failonerror="false"/>
   </target>

   <target name="install-java"
          description="Used to setup the java side of spacewalk  devel environment">
      <mkdir dir="/var/lib/tomcat5/webapps.save"/>
      <move file="/var/lib/tomcat5/webapps/rhn" tofile="/var/lib/tomcat5/webapps.save/rhn"/>
      <symlink link="/var/lib/tomcat5/webapps/rhn" resource="${git.home}/java/rhnwebapp"/>
   </target>      

   <target name="uninstall-java"  description="Used to uninstall the java side of spacewalk  devel environment">
      <symlink action="delete" link="/var/lib/tomcat5/webapps/rhn"/>
      <move file="/var/lib/tomcat5/webapps.save/rhn" tofile="/var/lib/tomcat5/webapps/rhn"/>
      <delete dir="/var/lib/tomcat5/webapps.save"/>
   </target>

  <target name="install-devel"
          description="Used to setup the spacewalk devel environment"  depends="install-web, install-java"/>

 <target name="uninstall-devel"
          description="Used to uninstall the spacewalk devel environment"  depends="uninstall-web, uninstall-java"/>


</project>
