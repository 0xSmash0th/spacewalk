<datasource_modes>

<mode name="active_org_admins">
    <query params="org_id">
SELECT ugm.user_id
     FROM rhnUserGroupMembers ugm
    WHERE ugm.user_group_id = (SELECT id
                                 FROM rhnUserGroup
                                WHERE org_id = :org_id
                                  AND group_type = (SELECT id FROM
          rhnUserGroupType WHERE label = 'org_admin'))
      AND exists (select wc.id
                    from rhnwebcontactenabled wc
                   where wc.id = ugm.user_id)
 ORDER BY ugm.user_id
    </query>
</mode>

<mode name="active_sat_admins">
    <query params="">
SELECT ugm.user_id
     FROM rhnUserGroupMembers ugm
    WHERE ugm.user_group_id IN (SELECT id
                                 FROM rhnUserGroup
                                WHERE group_type = (SELECT id FROM
          rhnUserGroupType WHERE label = 'satellite_admin'))
      AND exists (select wc.id
                    from rhnwebcontactenabled wc
                   where wc.id = ugm.user_id)
 ORDER BY ugm.user_id
    </query>
</mode>

<mode name="in_set" class="com.redhat.rhn.frontend.dto.UserOverview">
  <query params="user_id, set_label">
  SELECT  DISTINCT WC.id, PINFO.login_uc
    FROM  web_contact WC, rhnSet ST, web_user_personal_info PINFO
   WHERE  ST.user_id = :user_id
     AND  ST.label = :set_label
     AND  ST.element = WC.id
     AND PINFO.id = WC.personal_info_id
ORDER BY  PINFO.login_uc
  </query>
  <elaborator name="users_in_org_overview" />
</mode>

<mode name="users_in_org" class="com.redhat.rhn.frontend.dto.UserOverview">
  <query params="org_id">
SELECT wc.id AS ID,
       PINFO.login,
       PINFO.login_uc,
       wc.org_id
  FROM web_contact wc inner join 
       web_user_personal_info PINFO on PINFO.id = WC.personal_info_id
 WHERE wc.org_id = :org_id
ORDER BY PINFO.login_uc
  </query>
  <elaborator name="users_in_org_overview" />
</mode>

<mode name="all_users_in_multiorg" class="com.redhat.rhn.frontend.dto.MultiOrgAllUserOverview">
  <query params="">
SELECT wc.id AS ID,
       PINFO.login,
       wc.org_id,
       PINFO.login_uc
  FROM web_contact wc inner join 
       web_user_personal_info PINFO on PINFO.id = WC.personal_info_id
  where PINFO.default_org = wc.org_id
ORDER BY PINFO.login_uc
  </query>
  <elaborator name="all_users_in_multiorg_overview" />
</mode>

<query name="all_users_in_multiorg_overview" params="">
  SELECT  UIOO.user_id as id, user_login, user_first_name, user_last_name, 
          rhn_user.check_role(user_id, 'org_admin') as org_admin,
          rhn_user.check_role(user_id, 'satellite_admin') as sat_admin,
          wc.name as org_name,
          wupi.email as address
    FROM  rhnUsersInOrgOverview UIOO, web_customer wc, web_user_personal_info wupi, web_contact wcu
   WHERE  UIOO.user_id IN (%s)
     AND  wc.id = UIOO.org_id
     AND  uioo.user_id = wcu.id
     AND  wupi.id = wcu.personal_info_id
ORDER BY  UPPER(user_login), UIOO.user_id 
</query>

<mode name="users_in_multiorg" class="com.redhat.rhn.frontend.dto.MultiOrgUserOverview">
  <query params="org_id">
SELECT wc.id AS ID,
       PINFO.login,
       PINFO.login_uc
  FROM web_contact wc inner join 
  	web_user_personal_info PINFO on PINFO.id = WC.personal_info_id
 WHERE wc.org_id = :org_id
ORDER BY wc.login_uc
  </query>
  <elaborator name="users_in_multiorg_overview" />
</mode>

<query name="users_in_multiorg_overview" params="">
  SELECT  UIOO.user_id as id, user_login, user_first_name, user_last_name, 
          rhn_user.check_role(user_id, 'org_admin') as org_admin,
          wupi.email as address 
    FROM  rhnUsersInOrgOverview UIOO, web_user_personal_info wupi
   WHERE  UIOO.user_id IN (%s)
     AND  wupi.web_user_id = uioo.user_id
ORDER BY  UPPER(user_login), UIOO.user_id 
</query>

<mode name="active_in_org" class="com.redhat.rhn.frontend.dto.UserOverview">
  <query params="org_id">
SELECT wce.id AS ID,
       wce.login,
       wce.login_uc
  FROM rhnWebContactEnabled wce
 WHERE wce.org_id = :org_id
ORDER BY wce.login_uc
  </query>
  <elaborator name="users_in_org_overview" />
</mode>

<mode name="disabled_in_org" class="com.redhat.rhn.frontend.dto.UserOverview">
  <query params="org_id">
SELECT wcd.id AS ID,
       wcd.login,
       wcd.login_uc
  FROM rhnWebContactDisabled wcd
 WHERE wcd.org_id = :org_id
ORDER BY wcd.login_uc
  </query>
  <elaborator params="">
SELECT  UIOO.user_id as id, user_login, user_first_name, user_last_name, role_names,
        last_logged_in, date_completed as change_date, WUPI.first_names as changed_by_first_name,
        WUPI.last_name as changed_by_last_name, 'disabled' as status
  FROM  rhnUsersInOrgOverview UIOO, rhnUserInfo UI, rhnWebContactChangeLog WCCL,
        web_user_personal_info WUPI, web_contact WC
 WHERE  UIOO.user_id IN (%s)
   AND  WCCL.web_contact_id = UIOO.user_id
   AND  WCCL.date_completed = (select max(wccl_exists.date_completed)
                               from rhnWebContactChangeLog   wccl_exists
                               where WCCL.web_contact_id = wccl_exists.web_contact_id)
   and WCCL.web_contact_from_id = WC.id                            
   AND  WUPI.id = WC.personal_info_id
      AND  UI.personal_info_id = WUPI.id
  </elaborator>
</mode>

<callable-mode name="remove_from_usergroup">
  <query params="user_id, user_group_id">
     {call rhn_user.remove_from_usergroup(:user_id, :user_group_id)}
  </query>
</callable-mode>

<query name="users_in_org_overview" params="">
  SELECT  UIOO.user_id as id, user_login, user_first_name, user_last_name, role_names, 
          server_count, server_group_count, last_logged_in,
          nvl((select
                distinct wccs.label
            from
               rhnWebContactChangeLog   wccl,
               rhnWebContactChangeState wccs
            where 1=1
                   and wccl.change_state_id = wccs.id
                   and wccl.web_contact_id = UIOO.user_id
                   and wccl.date_completed =
                              (select max(wccl_exists.date_completed)
                                 from rhnWebContactChangeLog   wccl_exists
                                where wccl.web_contact_id = wccl_exists.web_contact_id)),'enabled') as status
    FROM  rhnUsersInOrgOverview UIOO, rhnUserInfo UI, web_contact wc, web_user_personal_info WUPI
   WHERE  UIOO.user_id IN (%s)
     AND wc.id = UIOO.user_id
     AND  wc.personal_info_id = WUPI.id
     AND  UI.personal_info_id = WUPI.id
ORDER BY  UPPER(user_login), UIOO.user_id 
</query>

<mode name="default_system_groups">
  <query params="user_id">
SELECT system_group_id
  FROM rhnUserDefaultSystemGroups
 WHERE user_id = :user_id
  </query>
</mode> 

<callable-mode name="create_new_user">
  <query params="userid, orgId, password, contactId, prefix, fname, lname, genqual, parentCompany, company, title, phone, fax, email, pin, fnameOl, lnameOl, addr1, addr2, addr3, city, state, zip, country, altFnames, altLnames, contCall, contMail, contEmail, contFax">
      {:userId = call CREATE_NEW_USER( :orgId, :login, :password, :contactId, 
                         :prefix, :fname, :lname, :genqual, :parentCompany, 
                         :company, :title, :phone, :fax, :email, :pin, 
                         :fnameOl, :lnameOl, :addr1, :addr2, :addr3, :city, 
                         :state, :zip, :country, :altFnames, :altLnames, 
                         :contCall, :contMail, :contEmail, :contFax)}
  </query>
</callable-mode>

<write-mode name="delete_all_system_groups_for_user">
  <query params="user_id">
    DELETE
      FROM rhnUserDefaultSystemGroups
     WHERE user_id = :user_id
  </query>
</write-mode>

<write-mode name="set_system_group">
  <query params="user_id, sgid">
    INSERT
      INTO rhnUserDefaultSystemGroups
           (user_id, system_group_id)
    VALUES (:user_id, :sgid)
  </query>
</write-mode>

<callable-mode name="set_server_group_permissions">
    <query params="user_id, server_group_id">
     {call rhn_user.add_servergroup_perm(:user_id, :server_group_id)}
    </query>
</callable-mode>

<mode name="check_server_group_permissions">
    <query params="user_id, server_group_id">
        select  wc.id user_id,
                sg.id server_group_id
        from    rhnServerGroup sg,
                web_contact wc,
                web_customer org
        where   wc.id = :user_id
          and   wc.org_id = org.id
          and   sg.org_id = org.id
          and   sg.id = :server_group_id
          and   not exists (
                select  1
                from    rhnUserServerGroupPerms usgp
                where   usgp.user_id = :user_id
                    and usgp.server_group_id = :server_group_id
            )
    </query>
</mode>

<callable-mode name="remove_server_group_permissions">
    <query params="user_id, server_group_id">
     {call rhn_user.remove_servergroup_perm(:user_id, :server_group_id)}
    </query>
</callable-mode>

<mode name="check_server_group_permissions_for_revoke">
    <query params="user_id, server_group_id">
    select  usgp.server_group_id, usgp.user_id
    from    rhnUserServerGroupPerms usgp
    where   usgp.server_group_id = :server_group_id
        and exists (
            select  1
            from    rhnServerGroup  sg,
                    web_contact     wc
            where   wc.id = :user_id
                and sg.id = :server_group_id
                and sg.org_id = wc.org_id
            )
    </query>
</mode>

<callable-mode name="oai_contact_sync">
  <query params="user_id">
    begin
    XXRH_OAI_WRAPPER.sync_contact(:user_id);
    end;
  </query>
</callable-mode>

<callable-mode name="update_perms_for_user">
  <query params="user_id">
    begin
    rhn_cache.update_perms_for_user(:user_id);
    end;
  </query>
</callable-mode>

<callable-mode name="delete_user">
  <query params="user_id">
    begin
    rhn_org.delete_user(:user_id);
    end;
  </query>
</callable-mode>

<!-- The Following two procedures are managed by the web team, we simply call them -->
<callable-mode name="disable_user">
  <query params="victim_id, admin_id">
    begin
    web_disable_user_pkg.disable_user(:victim_id, :admin_id);
    end;
  </query>
</callable-mode>

<callable-mode name="enable_user">
  <query params="victim_id, admin_id">
    begin
    web_disable_user_pkg.reenable_user(:victim_id, :admin_id);
    end;
  </query>
</callable-mode>

<mode name="user_count">
  <query params="">
SELECT count(id) as user_count
  FROM web_contact
  </query>
</mode> 
	
<mode name="get_user_id">
  <query params="loginUc">
SELECT id as user_id
  FROM web_contact wc inner join
      web_user_personal_info pinfo on pinfo.id = wc.personal_info_id
	  WHERE pinfo.login_uc = :loginUc and wc.org_id = pinfo.default_org
  </query>
</mode> 
	

</datasource_modes>
