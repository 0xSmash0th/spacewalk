<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping
PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <class name="com.redhat.rhn.domain.kickstart.KickstartableTree" 
        table="rhnKickstartableTree">

        <id name="id" type="long" column="id">
            <meta attribute="scope-set">protected</meta>
            <generator class="sequence">
                <param name="sequence">RHN_KSTREE_ID_SEQ</param>
            </generator>
        </id>
  
        <property name="basePath" type="string" column="base_path"/>
        <property name="bootImage" type="string" column="boot_image"/>
        <property name="label" type="string" column="label"/>
        <property name="lastModified" type="date" column="last_modified"/>
        <property name="orgId" type="long" column="org_id"/>
        
        <property name="created" type="date" column="created"/>
        <property name="modified" type="date" column="modified"/>
        
        <many-to-one
            name="channel"
            class="com.redhat.rhn.domain.channel.Channel"
            column="channel_id"
            cascade="none"/>
            
        <many-to-one
            name="installType"
            class="com.redhat.rhn.domain.kickstart.KickstartInstallType"
            column="install_type"
            cascade="none"/>
            
        <many-to-one
            name="treeType"
            class="com.redhat.rhn.domain.kickstart.KickstartTreeType"
            column="kstree_type"
            cascade="none"/>
                        
    </class>

    <query name="KickstartableTree.findById">
        <![CDATA[from com.redhat.rhn.domain.kickstart.KickstartableTree as k 
        		where k.id = :id]]>
    </query>
    <query name="KickstartableTree.findByLabelAndOrg">
        <![CDATA[from com.redhat.rhn.domain.kickstart.KickstartableTree as k 
        		where k.label = :label and k.orgId = :org_id]]>
    </query>
    <query name="KickstartableTree.findByLabelAndNullOrg">
        <![CDATA[from com.redhat.rhn.domain.kickstart.KickstartableTree as k 
        		where k.label = :label and k.orgId = null]]>
    </query>
    
    <query name="KickstartableTree.findByChannelAndOrg">
        <![CDATA[from com.redhat.rhn.domain.kickstart.KickstartableTree as k 
        		where k.channel = :channel_id and k.orgId = :org_id
        		order by k.label]]>
    </query>
    
    <query name="KickstartableTree.findByChannel">
        <![CDATA[from com.redhat.rhn.domain.kickstart.KickstartableTree as k 
        		where k.channel.id = :channel_id and (k.orgId is null or 
        		k.orgId = :org_id)
        		order by k.label]]>    
    </query>
    
    <query name="KickstartableTree.findByOrg">
        <![CDATA[from com.redhat.rhn.domain.kickstart.KickstartableTree as k 
        		where k.orgId = :org_id or k.orgId = null order by k.label]]>
    </query>
    
    <query name="KickstartableTree.verifyTreeAssignment">
    	<![CDATA[from com.redhat.rhn.domain.kickstart.KickstartableTree as k
    			where (k.orgId is null or k.orgId = :org_id) and
    			k.channel.id = :channel_id and 
    			k.id = :tree_id]]>
    </query>	
	
    <query name="KickstartableTree.findByIdAndOrg">
        <![CDATA[from com.redhat.rhn.domain.kickstart.KickstartableTree as k 
        		where k.id = :tree_id and (k.orgId = :org_id or k.orgId = null)]]>
    </query>
    
</hibernate-mapping>
